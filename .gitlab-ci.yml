stages:
  - lint
  - test
  - build
  - deploy

variables:
  IMAGE_URL: artifactory.pegadaian.co.id:5443/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
  PACKAGE_PATH: /go/src/gade/srv-gade-point

# A hack to make Golang-in-Gitlab happy
.anchors:
  - &inject-gopath
      export GO111MODULE=on
      && export PATH="$PATH:/go/bin"
      && export GOPRIVATE="https://artifactory.pegadaian.co.id/repository/go-group-01/"
      && export GOPROXY="https://artifactory.pegadaian.co.id/repository/go-group-01/"
      && export GONOSUMDB="github.com/*,golang.org/*,gopkg.in/*,gitlab.com/*,cloud.google.com/*,go.*,google.golang.org/*,gotest.*,honnef.co/*,mellium.im/*"
      && cp ${ARTIFACTORY_SSL_CERT} /usr/local/share/ca-certificates/ssl_certificate.crt
      && chmod 644 /usr/local/share/ca-certificates/ssl_certificate.crt && update-ca-certificates

.store_commit_hash: &store_commit_hash
  before_script:
    - touch latest_commit_hash
    - echo $CI_COMMIT_SHA > latest_commit_hash
    - echo $CI_COMMIT_TIMESTAMP >> latest_commit_hash

lint:
  image:
    name: artifactory.pegadaian.co.id:8084/golangci/golangci-lint:v1.42.1
    entrypoint: [""]
  stage: lint
  before_script:
    - *inject-gopath
  script:
    - go mod download
    - golangci-lint run
  only:
    - merge_requests

test:
  stage: test
  image: artifactory.pegadaian.co.id:8084/golang:1.16
  before_script:
    - *inject-gopath
  script:
    - go mod download
    - go test

build_dev:
  stage: build
  image: artifactory.pegadaian.co.id:8084/docker:latest
  services:
    - name: artifactory.pegadaian.co.id:8084/docker:dind
      command: ["--insecure-registry=artifactory.pegadaian.co.id:8084"]
  <<: *store_commit_hash
  script:
    - cp ${ARTIFACTORY_SSL_CERT} ${CI_PROJECT_DIR}/ssl_certificate.crt
    - mkdir -p ~/.docker/ && echo $DOCKER_AUTH_CONFIG > ~/.docker/config.json
    - docker build --pull -t $IMAGE_URL .
    - docker push $IMAGE_URL
  only:
    - master
  
build_prod:
  stage: build
  image: artifactory.pegadaian.co.id:8084/docker:latest
  services:
    - name: artifactory.pegadaian.co.id:8084/docker:dind
      command: ["--insecure-registry=artifactory.pegadaian.co.id:8084"]
  only:
    - tags
  <<: *store_commit_hash
  script:
    - if [ -z "$CI_COMMIT_TAG" ]; then export TAG=$CI_COMMIT_REF_SLUG; else export TAG=$CI_COMMIT_TAG; fi
    - cp ${ARTIFACTORY_SSL_CERT} ${CI_PROJECT_DIR}/ssl_certificate.crt
    - mkdir -p ~/.docker/ && echo $DOCKER_AUTH_CONFIG > ~/.docker/config.json
    - docker build --pull -t artifactory.pegadaian.co.id:5443/$CI_PROJECT_NAME:$TAG .
    - docker push artifactory.pegadaian.co.id:5443/$CI_PROJECT_NAME:$TAG

deploy_dev:
  image: artifactory.pegadaian.co.id:8084/tj/openshift-client:latest
  stage: deploy
  script:
    - while true; do result=0; oc login -u $OC_USER -p $OC_PASS --server=$OPENSHIFT_OC_URL --insecure-skip-tls-verify || result=$?; tj=$((tj+1)); if [ $result -eq 0 ]; then break; elif [ $tj -gt 5 ]; then exit 1; fi; echo "retry $tj";done;
    - oc rollout latest dc/srv-greward
  only:
    - master