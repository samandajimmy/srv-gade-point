stages:
  - build
  - test
  - release

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  PACKAGE_PATH: /go/src/gade/srv-gade-point

# A hack to make Golang-in-Gitlab happy
.anchors:
  - &inject-gopath
      mkdir -p $(dirname ${PACKAGE_PATH})
      && ln -s ${CI_PROJECT_DIR} ${PACKAGE_PATH}
      && cd ${PACKAGE_PATH}
      && export GO111MODULE=on
      && export PATH="$PATH:/go/bin"
      && echo $PATH

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN 10.251.4.82:5000

dep:
  stage: dep
  image: golang:1.11
  script:
    - mkdir -p .cache
    - export GOPATH="$PACKAGE_PATH/.cache"
    - go mod download
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .cache

test:
  stage: test
  dependencies:
    - dep
  image: golang:1.11
  before_script:
    - *inject-gopath
  script:
    - go test

build:
  image: docker:stable
  services:
    - name: docker:dind
      command: ["--insecure-registry=10.251.4.82:5000"]
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

release:
  stage: release
  dependencies:
    - dep
  image: docker:stable
  services:
    - name: docker:dind
      command: ["--insecure-registry=10.251.4.82:5000"]
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - tags