// Code generated by MockGen. DO NOT EDIT.
// Source: gade/srv-gade-point/tags (interfaces: TUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "gade/srv-gade-point/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo"
)

// MockTUseCase is a mock of TUseCase interface.
type MockTUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockTUseCaseMockRecorder
}

// MockTUseCaseMockRecorder is the mock recorder for MockTUseCase.
type MockTUseCaseMockRecorder struct {
	mock *MockTUseCase
}

// NewMockTUseCase creates a new mock instance.
func NewMockTUseCase(ctrl *gomock.Controller) *MockTUseCase {
	mock := &MockTUseCase{ctrl: ctrl}
	mock.recorder = &MockTUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTUseCase) EXPECT() *MockTUseCaseMockRecorder {
	return m.recorder
}

// CreateTag mocks base method.
func (m *MockTUseCase) CreateTag(arg0 echo.Context, arg1 *models.Tag, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTag", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTag indicates an expected call of CreateTag.
func (mr *MockTUseCaseMockRecorder) CreateTag(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTag", reflect.TypeOf((*MockTUseCase)(nil).CreateTag), arg0, arg1, arg2)
}

// Delete mocks base method.
func (m *MockTUseCase) Delete(arg0 echo.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTUseCaseMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTUseCase)(nil).Delete), arg0, arg1)
}
