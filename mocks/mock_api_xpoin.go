// Code generated by MockGen. DO NOT EDIT.
// Source: gade/srv-gade-point/api (interfaces: IApiXpoin)

// Package mocks is a generated GoMock package.
package mocks

import (
	api "gade/srv-gade-point/api"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo"
)

// MockIApiXpoin is a mock of IApiXpoin interface.
type MockIApiXpoin struct {
	ctrl     *gomock.Controller
	recorder *MockIApiXpoinMockRecorder
}

// MockIApiXpoinMockRecorder is the mock recorder for MockIApiXpoin.
type MockIApiXpoinMockRecorder struct {
	mock *MockIApiXpoin
}

// NewMockIApiXpoin creates a new mock instance.
func NewMockIApiXpoin(ctrl *gomock.Controller) *MockIApiXpoin {
	mock := &MockIApiXpoin{ctrl: ctrl}
	mock.recorder = &MockIApiXpoinMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIApiXpoin) EXPECT() *MockIApiXpoinMockRecorder {
	return m.recorder
}

// XpoinPost mocks base method.
func (m *MockIApiXpoin) XpoinPost(arg0 echo.Context, arg1 interface{}, arg2 string) (api.XpoinResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "XpoinPost", arg0, arg1, arg2)
	ret0, _ := ret[0].(api.XpoinResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// XpoinPost indicates an expected call of XpoinPost.
func (mr *MockIApiXpoinMockRecorder) XpoinPost(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "XpoinPost", reflect.TypeOf((*MockIApiXpoin)(nil).XpoinPost), arg0, arg1, arg2)
}
